//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DotNetService
{
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="DotNetService.IService1")]
    public interface IService1
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/InsertUser", ReplyAction="http://tempuri.org/IService1/InsertUserResponse")]
        string InsertUser(string Last_Name, string Given_Name, string Middle_Name, string Suffix, string Email_Address, string Username, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/InsertUser", ReplyAction="http://tempuri.org/IService1/InsertUserResponse")]
        System.Threading.Tasks.Task<string> InsertUserAsync(string Last_Name, string Given_Name, string Middle_Name, string Suffix, string Email_Address, string Username, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AccountAuthenticate", ReplyAction="http://tempuri.org/IService1/AccountAuthenticateResponse")]
        bool AccountAuthenticate(string Username, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AccountAuthenticate", ReplyAction="http://tempuri.org/IService1/AccountAuthenticateResponse")]
        System.Threading.Tasks.Task<bool> AccountAuthenticateAsync(string Username, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateAccount", ReplyAction="http://tempuri.org/IService1/UpdateAccountResponse")]
        string UpdateAccount(string Username, string NewUsername, string NewPassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateAccount", ReplyAction="http://tempuri.org/IService1/UpdateAccountResponse")]
        System.Threading.Tasks.Task<string> UpdateAccountAsync(string Username, string NewUsername, string NewPassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetUsertInfo", ReplyAction="http://tempuri.org/IService1/GetUsertInfoResponse")]
        DotNetService.GetUsertInfoResponse GetUsertInfo(DotNetService.GetUsertInfoRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetUsertInfo", ReplyAction="http://tempuri.org/IService1/GetUsertInfoResponse")]
        System.Threading.Tasks.Task<DotNetService.GetUsertInfoResponse> GetUsertInfoAsync(DotNetService.GetUsertInfoRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetSpamCounter", ReplyAction="http://tempuri.org/IService1/GetSpamCounterResponse")]
        int GetSpamCounter(string Username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetSpamCounter", ReplyAction="http://tempuri.org/IService1/GetSpamCounterResponse")]
        System.Threading.Tasks.Task<int> GetSpamCounterAsync(string Username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateSpamCounter", ReplyAction="http://tempuri.org/IService1/UpdateSpamCounterResponse")]
        void UpdateSpamCounter(string Username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateSpamCounter", ReplyAction="http://tempuri.org/IService1/UpdateSpamCounterResponse")]
        System.Threading.Tasks.Task UpdateSpamCounterAsync(string Username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GuidesGet", ReplyAction="http://tempuri.org/IService1/GuidesGetResponse")]
        DotNetService.GuidesGetResponse GuidesGet(DotNetService.GuidesGetRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GuidesGet", ReplyAction="http://tempuri.org/IService1/GuidesGetResponse")]
        System.Threading.Tasks.Task<DotNetService.GuidesGetResponse> GuidesGetAsync(DotNetService.GuidesGetRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GuidesGetContent", ReplyAction="http://tempuri.org/IService1/GuidesGetContentResponse")]
        DotNetService.GuidesGetContentResponse GuidesGetContent(DotNetService.GuidesGetContentRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GuidesGetContent", ReplyAction="http://tempuri.org/IService1/GuidesGetContentResponse")]
        System.Threading.Tasks.Task<DotNetService.GuidesGetContentResponse> GuidesGetContentAsync(DotNetService.GuidesGetContentRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetFeedbacks", ReplyAction="http://tempuri.org/IService1/GetFeedbacksResponse")]
        DotNetService.GetFeedbacksResponse GetFeedbacks(DotNetService.GetFeedbacksRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetFeedbacks", ReplyAction="http://tempuri.org/IService1/GetFeedbacksResponse")]
        System.Threading.Tasks.Task<DotNetService.GetFeedbacksResponse> GetFeedbacksAsync(DotNetService.GetFeedbacksRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/FeedbackInsert", ReplyAction="http://tempuri.org/IService1/FeedbackInsertResponse")]
        void FeedbackInsert(string Username, string Guide_Name, string Plant_Name, string Date, string Time, string Feedback_Content, int Rating);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/FeedbackInsert", ReplyAction="http://tempuri.org/IService1/FeedbackInsertResponse")]
        System.Threading.Tasks.Task FeedbackInsertAsync(string Username, string Guide_Name, string Plant_Name, string Date, string Time, string Feedback_Content, int Rating);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GuideGetByPlant", ReplyAction="http://tempuri.org/IService1/GuideGetByPlantResponse")]
        DotNetService.GuideGetByPlantResponse GuideGetByPlant(DotNetService.GuideGetByPlantRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GuideGetByPlant", ReplyAction="http://tempuri.org/IService1/GuideGetByPlantResponse")]
        System.Threading.Tasks.Task<DotNetService.GuideGetByPlantResponse> GuideGetByPlantAsync(DotNetService.GuideGetByPlantRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetForumsAll", ReplyAction="http://tempuri.org/IService1/GetForumsAllResponse")]
        DotNetService.GetForumsAllResponse GetForumsAll(DotNetService.GetForumsAllRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetForumsAll", ReplyAction="http://tempuri.org/IService1/GetForumsAllResponse")]
        System.Threading.Tasks.Task<DotNetService.GetForumsAllResponse> GetForumsAllAsync(DotNetService.GetForumsAllRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetForumContent", ReplyAction="http://tempuri.org/IService1/GetForumContentResponse")]
        DotNetService.GetForumContentResponse GetForumContent(DotNetService.GetForumContentRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetForumContent", ReplyAction="http://tempuri.org/IService1/GetForumContentResponse")]
        System.Threading.Tasks.Task<DotNetService.GetForumContentResponse> GetForumContentAsync(DotNetService.GetForumContentRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetUsertInfo", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetUsertInfoRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string Username;
        
        public GetUsertInfoRequest()
        {
        }
        
        public GetUsertInfoRequest(string Username)
        {
            this.Username = Username;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetUsertInfoResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetUsertInfoResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string Last_Name;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string Given_Name;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string Middle_Name;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public string Suffix;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=4)]
        public string Email_Address;
        
        public GetUsertInfoResponse()
        {
        }
        
        public GetUsertInfoResponse(string Last_Name, string Given_Name, string Middle_Name, string Suffix, string Email_Address)
        {
            this.Last_Name = Last_Name;
            this.Given_Name = Given_Name;
            this.Middle_Name = Middle_Name;
            this.Suffix = Suffix;
            this.Email_Address = Email_Address;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GuidesGet", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GuidesGetRequest
    {
        
        public GuidesGetRequest()
        {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GuidesGetResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GuidesGetResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string[] Guide_Name;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string[] Plant_Name;
        
        public GuidesGetResponse()
        {
        }
        
        public GuidesGetResponse(string[] Guide_Name, string[] Plant_Name)
        {
            this.Guide_Name = Guide_Name;
            this.Plant_Name = Plant_Name;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GuidesGetContent", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GuidesGetContentRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string GName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string PName;
        
        public GuidesGetContentRequest()
        {
        }
        
        public GuidesGetContentRequest(string GName, string PName)
        {
            this.GName = GName;
            this.PName = PName;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GuidesGetContentResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GuidesGetContentResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string Guide_Content;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string Video_URL;
        
        public GuidesGetContentResponse()
        {
        }
        
        public GuidesGetContentResponse(string Guide_Content, string Video_URL)
        {
            this.Guide_Content = Guide_Content;
            this.Video_URL = Video_URL;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetFeedbacks", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetFeedbacksRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string Guide_Name;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string Plant_Name;
        
        public GetFeedbacksRequest()
        {
        }
        
        public GetFeedbacksRequest(string Guide_Name, string Plant_Name)
        {
            this.Guide_Name = Guide_Name;
            this.Plant_Name = Plant_Name;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetFeedbacksResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetFeedbacksResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string[] Username;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string[] Date;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string[] Time;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public string[] Feedback_Content;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=4)]
        public string[] Rating;
        
        public GetFeedbacksResponse()
        {
        }
        
        public GetFeedbacksResponse(string[] Username, string[] Date, string[] Time, string[] Feedback_Content, string[] Rating)
        {
            this.Username = Username;
            this.Date = Date;
            this.Time = Time;
            this.Feedback_Content = Feedback_Content;
            this.Rating = Rating;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GuideGetByPlant", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GuideGetByPlantRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string Plant_Name;
        
        public GuideGetByPlantRequest()
        {
        }
        
        public GuideGetByPlantRequest(string Plant_Name)
        {
            this.Plant_Name = Plant_Name;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GuideGetByPlantResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GuideGetByPlantResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string[] Guide_Name;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string[] Plant_Names;
        
        public GuideGetByPlantResponse()
        {
        }
        
        public GuideGetByPlantResponse(string[] Guide_Name, string[] Plant_Names)
        {
            this.Guide_Name = Guide_Name;
            this.Plant_Names = Plant_Names;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetForumsAll", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetForumsAllRequest
    {
        
        public GetForumsAllRequest()
        {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetForumsAllResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetForumsAllResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string[] Username;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string[] Date;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string[] Headline;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public string[] Time;
        
        public GetForumsAllResponse()
        {
        }
        
        public GetForumsAllResponse(string[] Username, string[] Date, string[] Headline, string[] Time)
        {
            this.Username = Username;
            this.Date = Date;
            this.Headline = Headline;
            this.Time = Time;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetForumContent", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetForumContentRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string Username;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string Headline;
        
        public GetForumContentRequest()
        {
        }
        
        public GetForumContentRequest(string Username, string Headline)
        {
            this.Username = Username;
            this.Headline = Headline;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetForumContentResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetForumContentResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string ForumContent;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string Date;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string Time;
        
        public GetForumContentResponse()
        {
        }
        
        public GetForumContentResponse(string ForumContent, string Date, string Time)
        {
            this.ForumContent = ForumContent;
            this.Date = Date;
            this.Time = Time;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    public interface IService1Channel : DotNetService.IService1, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    public partial class Service1Client : System.ServiceModel.ClientBase<DotNetService.IService1>, DotNetService.IService1
    {
        
        /// <summary>
        /// Implement this partial method to configure the service endpoint.
        /// </summary>
        /// <param name="serviceEndpoint">The endpoint to configure</param>
        /// <param name="clientCredentials">The client credentials</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public Service1Client() : 
                base(Service1Client.GetDefaultBinding(), Service1Client.GetDefaultEndpointAddress())
        {
            this.Endpoint.Name = EndpointConfiguration.BasicHttpBinding_IService1.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public Service1Client(EndpointConfiguration endpointConfiguration) : 
                base(Service1Client.GetBindingForEndpoint(endpointConfiguration), Service1Client.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public Service1Client(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(Service1Client.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public Service1Client(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(Service1Client.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public string InsertUser(string Last_Name, string Given_Name, string Middle_Name, string Suffix, string Email_Address, string Username, string Password)
        {
            return base.Channel.InsertUser(Last_Name, Given_Name, Middle_Name, Suffix, Email_Address, Username, Password);
        }
        
        public System.Threading.Tasks.Task<string> InsertUserAsync(string Last_Name, string Given_Name, string Middle_Name, string Suffix, string Email_Address, string Username, string Password)
        {
            return base.Channel.InsertUserAsync(Last_Name, Given_Name, Middle_Name, Suffix, Email_Address, Username, Password);
        }
        
        public bool AccountAuthenticate(string Username, string Password)
        {
            return base.Channel.AccountAuthenticate(Username, Password);
        }
        
        public System.Threading.Tasks.Task<bool> AccountAuthenticateAsync(string Username, string Password)
        {
            return base.Channel.AccountAuthenticateAsync(Username, Password);
        }
        
        public string UpdateAccount(string Username, string NewUsername, string NewPassword)
        {
            return base.Channel.UpdateAccount(Username, NewUsername, NewPassword);
        }
        
        public System.Threading.Tasks.Task<string> UpdateAccountAsync(string Username, string NewUsername, string NewPassword)
        {
            return base.Channel.UpdateAccountAsync(Username, NewUsername, NewPassword);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        DotNetService.GetUsertInfoResponse DotNetService.IService1.GetUsertInfo(DotNetService.GetUsertInfoRequest request)
        {
            return base.Channel.GetUsertInfo(request);
        }
        
        public string GetUsertInfo(string Username, out string Given_Name, out string Middle_Name, out string Suffix, out string Email_Address)
        {
            DotNetService.GetUsertInfoRequest inValue = new DotNetService.GetUsertInfoRequest();
            inValue.Username = Username;
            DotNetService.GetUsertInfoResponse retVal = ((DotNetService.IService1)(this)).GetUsertInfo(inValue);
            Given_Name = retVal.Given_Name;
            Middle_Name = retVal.Middle_Name;
            Suffix = retVal.Suffix;
            Email_Address = retVal.Email_Address;
            return retVal.Last_Name;
        }
        
        public System.Threading.Tasks.Task<DotNetService.GetUsertInfoResponse> GetUsertInfoAsync(DotNetService.GetUsertInfoRequest request)
        {
            return base.Channel.GetUsertInfoAsync(request);
        }
        
        public int GetSpamCounter(string Username)
        {
            return base.Channel.GetSpamCounter(Username);
        }
        
        public System.Threading.Tasks.Task<int> GetSpamCounterAsync(string Username)
        {
            return base.Channel.GetSpamCounterAsync(Username);
        }
        
        public void UpdateSpamCounter(string Username)
        {
            base.Channel.UpdateSpamCounter(Username);
        }
        
        public System.Threading.Tasks.Task UpdateSpamCounterAsync(string Username)
        {
            return base.Channel.UpdateSpamCounterAsync(Username);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        DotNetService.GuidesGetResponse DotNetService.IService1.GuidesGet(DotNetService.GuidesGetRequest request)
        {
            return base.Channel.GuidesGet(request);
        }
        
        public string[] GuidesGet(out string[] Plant_Name)
        {
            DotNetService.GuidesGetRequest inValue = new DotNetService.GuidesGetRequest();
            DotNetService.GuidesGetResponse retVal = ((DotNetService.IService1)(this)).GuidesGet(inValue);
            Plant_Name = retVal.Plant_Name;
            return retVal.Guide_Name;
        }
        
        public System.Threading.Tasks.Task<DotNetService.GuidesGetResponse> GuidesGetAsync(DotNetService.GuidesGetRequest request)
        {
            return base.Channel.GuidesGetAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        DotNetService.GuidesGetContentResponse DotNetService.IService1.GuidesGetContent(DotNetService.GuidesGetContentRequest request)
        {
            return base.Channel.GuidesGetContent(request);
        }
        
        public string GuidesGetContent(string GName, string PName, out string Video_URL)
        {
            DotNetService.GuidesGetContentRequest inValue = new DotNetService.GuidesGetContentRequest();
            inValue.GName = GName;
            inValue.PName = PName;
            DotNetService.GuidesGetContentResponse retVal = ((DotNetService.IService1)(this)).GuidesGetContent(inValue);
            Video_URL = retVal.Video_URL;
            return retVal.Guide_Content;
        }
        
        public System.Threading.Tasks.Task<DotNetService.GuidesGetContentResponse> GuidesGetContentAsync(DotNetService.GuidesGetContentRequest request)
        {
            return base.Channel.GuidesGetContentAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        DotNetService.GetFeedbacksResponse DotNetService.IService1.GetFeedbacks(DotNetService.GetFeedbacksRequest request)
        {
            return base.Channel.GetFeedbacks(request);
        }
        
        public string[] GetFeedbacks(string Guide_Name, string Plant_Name, out string[] Date, out string[] Time, out string[] Feedback_Content, out string[] Rating)
        {
            DotNetService.GetFeedbacksRequest inValue = new DotNetService.GetFeedbacksRequest();
            inValue.Guide_Name = Guide_Name;
            inValue.Plant_Name = Plant_Name;
            DotNetService.GetFeedbacksResponse retVal = ((DotNetService.IService1)(this)).GetFeedbacks(inValue);
            Date = retVal.Date;
            Time = retVal.Time;
            Feedback_Content = retVal.Feedback_Content;
            Rating = retVal.Rating;
            return retVal.Username;
        }
        
        public System.Threading.Tasks.Task<DotNetService.GetFeedbacksResponse> GetFeedbacksAsync(DotNetService.GetFeedbacksRequest request)
        {
            return base.Channel.GetFeedbacksAsync(request);
        }
        
        public void FeedbackInsert(string Username, string Guide_Name, string Plant_Name, string Date, string Time, string Feedback_Content, int Rating)
        {
            base.Channel.FeedbackInsert(Username, Guide_Name, Plant_Name, Date, Time, Feedback_Content, Rating);
        }
        
        public System.Threading.Tasks.Task FeedbackInsertAsync(string Username, string Guide_Name, string Plant_Name, string Date, string Time, string Feedback_Content, int Rating)
        {
            return base.Channel.FeedbackInsertAsync(Username, Guide_Name, Plant_Name, Date, Time, Feedback_Content, Rating);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        DotNetService.GuideGetByPlantResponse DotNetService.IService1.GuideGetByPlant(DotNetService.GuideGetByPlantRequest request)
        {
            return base.Channel.GuideGetByPlant(request);
        }
        
        public string[] GuideGetByPlant(string Plant_Name, out string[] Plant_Names)
        {
            DotNetService.GuideGetByPlantRequest inValue = new DotNetService.GuideGetByPlantRequest();
            inValue.Plant_Name = Plant_Name;
            DotNetService.GuideGetByPlantResponse retVal = ((DotNetService.IService1)(this)).GuideGetByPlant(inValue);
            Plant_Names = retVal.Plant_Names;
            return retVal.Guide_Name;
        }
        
        public System.Threading.Tasks.Task<DotNetService.GuideGetByPlantResponse> GuideGetByPlantAsync(DotNetService.GuideGetByPlantRequest request)
        {
            return base.Channel.GuideGetByPlantAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        DotNetService.GetForumsAllResponse DotNetService.IService1.GetForumsAll(DotNetService.GetForumsAllRequest request)
        {
            return base.Channel.GetForumsAll(request);
        }
        
        public string[] GetForumsAll(out string[] Date, out string[] Headline, out string[] Time)
        {
            DotNetService.GetForumsAllRequest inValue = new DotNetService.GetForumsAllRequest();
            DotNetService.GetForumsAllResponse retVal = ((DotNetService.IService1)(this)).GetForumsAll(inValue);
            Date = retVal.Date;
            Headline = retVal.Headline;
            Time = retVal.Time;
            return retVal.Username;
        }
        
        public System.Threading.Tasks.Task<DotNetService.GetForumsAllResponse> GetForumsAllAsync(DotNetService.GetForumsAllRequest request)
        {
            return base.Channel.GetForumsAllAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        DotNetService.GetForumContentResponse DotNetService.IService1.GetForumContent(DotNetService.GetForumContentRequest request)
        {
            return base.Channel.GetForumContent(request);
        }
        
        public string GetForumContent(string Username, string Headline, out string Date, out string Time)
        {
            DotNetService.GetForumContentRequest inValue = new DotNetService.GetForumContentRequest();
            inValue.Username = Username;
            inValue.Headline = Headline;
            DotNetService.GetForumContentResponse retVal = ((DotNetService.IService1)(this)).GetForumContent(inValue);
            Date = retVal.Date;
            Time = retVal.Time;
            return retVal.ForumContent;
        }
        
        public System.Threading.Tasks.Task<DotNetService.GetForumContentResponse> GetForumContentAsync(DotNetService.GetForumContentRequest request)
        {
            return base.Channel.GetForumContentAsync(request);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IService1))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IService1))
            {
                return new System.ServiceModel.EndpointAddress("http://10.0.2.2:8733/Design_Time_Addresses/Dotnet4WebService/Service1/");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding()
        {
            return Service1Client.GetBindingForEndpoint(EndpointConfiguration.BasicHttpBinding_IService1);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress()
        {
            return Service1Client.GetEndpointAddress(EndpointConfiguration.BasicHttpBinding_IService1);
        }
        
        public enum EndpointConfiguration
        {
            
            BasicHttpBinding_IService1,
        }
    }
}
